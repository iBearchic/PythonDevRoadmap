{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"17QqF3cJs4sFxjZ47sRtyPA1yaB8XBWCU","timestamp":1711708438092}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Постройте воронку, которая показывала бы в динамике по неделям и месяцам:\n","1.   сколько клиентов посещает наш сайт;\n","2.   какая доля из них (посетивших) регистрируется на нём/подаёт заявку на игру/приходит на игру (неважно, в каком месяце);\n","3.   какая доля из них (зарегестрировавшихся) подает заявку на игру (неважно, в каком месяце);\n","4.   какая доля из них (зарегестрировавшихся и подавших заявку на игру) по факту приходит на игру (неважно, в каком месяце).\n","\n","Изобразите:\n","\n","1.   Кол-во клиентов, которые посещают наш сайт / регистрируются на сайте / подают заявку на игру/ приходят на игру помесячно и понедельно. Добавьте легенду, подписи осей и название диаграммы.\n","\n","Дополнительно сделайте табличку с долей каждой группы от общего числа посетителей для помесячного графика.\n","\n","2.   Помесячно (и затем понедельно) на одной гистограмме\n","- кол-во клиентов, которые посетили сайт / зарегистрировались / подали заявку на игру / пришли на игру и долю зарегистрировавшихся от посетителей / долю подавших заявку от регистраций / долю пришедших хотя бы на 1 игру от подававших заявку (абсолюты и конверсии должны быть на разных осях соответственно)\n","\n","\n","Какие выводы можно сделать исходя из построенных конверсий, какие точки роста продукта вы видите?"],"metadata":{"id":"tl76Zxg4XSQk"}},{"cell_type":"markdown","source":["// Всего можно получить 6 баллов\n","*   построена полная воронка с помощью sql-запроса - 2 балла\n","*   выполнен 1 пункт - 2 балла\n","*   выполнен 2 пункт - 2 балла\n","\n"],"metadata":{"id":"RMTiCOkulftL"}},{"cell_type":"markdown","source":["\n","```\n","#Предварительно надо установить pandas, psycopg2, matplotlib, seaborn, plotly\n","#То, что нам необходимо, устанавливаем в командной строке с помощью pip:\n","#pip install pandas\n","#pip3 install psycopg2-binary\n","#python -m pip install -U matplotlib\n","#pip install seaborn[stats]\n","#pip install plotly\n","```\n","\n"],"metadata":{"id":"YH_evR4PyQnc"}},{"cell_type":"code","source":["# !pip install psycopg2-binary\n","# !pip install plotly"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WprY2563yKxE","executionInfo":{"status":"ok","timestamp":1711708692002,"user_tz":-180,"elapsed":7555,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"93e7f14e-5dd6-4168-8cf7-afb429e272c0"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: plotly in /usr/local/lib/python3.10/dist-packages (5.15.0)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly) (8.2.3)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from plotly) (24.0)\n"]}]},{"cell_type":"markdown","source":["#1. Подключаемся к базе данных с помощью Python в JupyterNotebook"],"metadata":{"id":"gIFtgV0C3LV4"}},{"cell_type":"code","execution_count":3,"metadata":{"id":"hrIn2IFWXF1h","executionInfo":{"status":"ok","timestamp":1711709848339,"user_tz":-180,"elapsed":956,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}}},"outputs":[],"source":["import psycopg2\n","import pandas as pd\n","import pandas.io.sql as sqlio\n","from matplotlib import pyplot as plt\n","#import seaborn as sns\n","from plotly import graph_objects as go\n","from plotly.data import tips\n","#import plotly.graph_objects as go\n","%matplotlib inline\n","\n","\n","conn = psycopg2.connect(\n","    host=\"158.160.110.228\",\n","    port=5432,\n","    database=\"postgres\",\n","    user=\"student\",\n","    password=\"JvLda93aA\",\n",")"]},{"cell_type":"markdown","source":["#2. Собираем датасет с необходимыми полями"],"metadata":{"id":"A3gEE1wa3IpE"}},{"cell_type":"code","source":["# Клиенты посетившие сайт\n","query = \"SELECT client_rk, visit_dttm FROM msu_analytics.client\"\n","df_client = sqlio.read_sql_query(query, conn)\n","df_client.head()"],"metadata":{"id":"03oOUWJWYF7a","colab":{"base_uri":"https://localhost:8080/","height":262},"executionInfo":{"status":"ok","timestamp":1711713229972,"user_tz":-180,"elapsed":1156,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"93436db8-b898-4da3-9a2b-773c1432795d"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-38-ef1c256c4765>:3: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n","  df_client = sqlio.read_sql_query(query, conn)\n"]},{"output_type":"execute_result","data":{"text/plain":["   client_rk                 visit_dttm\n","0        147 2022-11-15 10:26:20.581918\n","1        227 2022-12-01 16:07:06.929838\n","2        243 2022-10-13 17:11:18.090119\n","3        456 2022-12-17 09:10:03.151667\n","4        541 2022-11-01 16:09:34.351368"],"text/html":["\n","  <div id=\"df-8d6ebfb6-eb03-4fde-9314-558dd91eae58\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>client_rk</th>\n","      <th>visit_dttm</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>147</td>\n","      <td>2022-11-15 10:26:20.581918</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>227</td>\n","      <td>2022-12-01 16:07:06.929838</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>243</td>\n","      <td>2022-10-13 17:11:18.090119</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>456</td>\n","      <td>2022-12-17 09:10:03.151667</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>541</td>\n","      <td>2022-11-01 16:09:34.351368</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d6ebfb6-eb03-4fde-9314-558dd91eae58')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8d6ebfb6-eb03-4fde-9314-558dd91eae58 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8d6ebfb6-eb03-4fde-9314-558dd91eae58');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f5b9d9b0-d96b-4d2f-bbc6-f57abc9df64f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f5b9d9b0-d96b-4d2f-bbc6-f57abc9df64f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f5b9d9b0-d96b-4d2f-bbc6-f57abc9df64f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_client","summary":"{\n  \"name\": \"df_client\",\n  \"rows\": 4096,\n  \"fields\": [\n    {\n      \"column\": \"client_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1182,\n        \"min\": 1,\n        \"max\": 4096,\n        \"num_unique_values\": 4096,\n        \"samples\": [\n          1315,\n          3770,\n          2644\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"visit_dttm\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2022-09-01 03:32:43.977277\",\n        \"max\": \"2023-02-02 02:22:04.176738\",\n        \"num_unique_values\": 4096,\n        \"samples\": [\n          \"2022-09-30 07:36:09.050020\",\n          \"2022-09-07 12:57:11.704822\",\n          \"2023-01-06 19:37:47.659181\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["## Количество уникальных клиентов, посещающих сайт:"],"metadata":{"id":"oDjOlQ8q3erk"}},{"cell_type":"code","source":["df_client['client_rk'].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Un3kiHRZ2_XC","executionInfo":{"status":"ok","timestamp":1711711930738,"user_tz":-180,"elapsed":286,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"dda3e350-6c27-4535-9a0f-470ae6f6d794"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4096"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["## Cколько клиентов посещают наш сайт / регистрируются на сайте / подают заявку на игру/ приходят на игру помесячно"],"metadata":{"id":"54hnS4YE4_pf"}},{"cell_type":"code","source":["# Клиенты зарегестрировавшиеся сайт\n","query = \"SELECT client_rk, account_rk FROM msu_analytics.account\"\n","df_regs = sqlio.read_sql_query(query, conn)\n","df_regs.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":262},"id":"VQoMFcMr-GUR","executionInfo":{"status":"ok","timestamp":1711713234295,"user_tz":-180,"elapsed":714,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"cbe13f9f-5239-4e19-c260-3354ef9c62ba"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-39-d4f75bcbf52a>:3: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n","  df_regs = sqlio.read_sql_query(query, conn)\n"]},{"output_type":"execute_result","data":{"text/plain":["   client_rk  account_rk\n","0       3231           3\n","1       1112          19\n","2       2639          35\n","3        180          51\n","4       2590          67"],"text/html":["\n","  <div id=\"df-0c9d4c4a-97d7-43a7-aba8-0baef222b5bb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>client_rk</th>\n","      <th>account_rk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3231</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1112</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2639</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>180</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2590</td>\n","      <td>67</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c9d4c4a-97d7-43a7-aba8-0baef222b5bb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c9d4c4a-97d7-43a7-aba8-0baef222b5bb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c9d4c4a-97d7-43a7-aba8-0baef222b5bb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9a43fed5-895a-46a1-9126-5fccca6239e2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9a43fed5-895a-46a1-9126-5fccca6239e2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9a43fed5-895a-46a1-9126-5fccca6239e2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_regs","summary":"{\n  \"name\": \"df_regs\",\n  \"rows\": 1024,\n  \"fields\": [\n    {\n      \"column\": \"client_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1195,\n        \"min\": 3,\n        \"max\": 4093,\n        \"num_unique_values\": 1024,\n        \"samples\": [\n          457,\n          3660,\n          877\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"account_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 295,\n        \"min\": 1,\n        \"max\": 1024,\n        \"num_unique_values\": 1024,\n        \"samples\": [\n          235,\n          622,\n          988\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["df_client_regs = pd.merge(\n","  df_client, df_regs, how=\"left\", on=[\"client_rk\"]\n",")\n","\n","df_client_regs.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"rYO2YYUd-4s2","executionInfo":{"status":"ok","timestamp":1711713236855,"user_tz":-180,"elapsed":286,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"0fd3cdfd-ecc4-4751-ed39-bbf0bbf149a9"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   client_rk                 visit_dttm  account_rk\n","0        147 2022-11-15 10:26:20.581918      1017.0\n","1        227 2022-12-01 16:07:06.929838       712.0\n","2        243 2022-10-13 17:11:18.090119       296.0\n","3        456 2022-12-17 09:10:03.151667       539.0\n","4        541 2022-11-01 16:09:34.351368       545.0"],"text/html":["\n","  <div id=\"df-d549f014-26f4-4f37-afd7-9bf1ef6a176b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>client_rk</th>\n","      <th>visit_dttm</th>\n","      <th>account_rk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>147</td>\n","      <td>2022-11-15 10:26:20.581918</td>\n","      <td>1017.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>227</td>\n","      <td>2022-12-01 16:07:06.929838</td>\n","      <td>712.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>243</td>\n","      <td>2022-10-13 17:11:18.090119</td>\n","      <td>296.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>456</td>\n","      <td>2022-12-17 09:10:03.151667</td>\n","      <td>539.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>541</td>\n","      <td>2022-11-01 16:09:34.351368</td>\n","      <td>545.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d549f014-26f4-4f37-afd7-9bf1ef6a176b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d549f014-26f4-4f37-afd7-9bf1ef6a176b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d549f014-26f4-4f37-afd7-9bf1ef6a176b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8bc6e060-2d78-47cd-8bfb-e9c3bf282b29\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8bc6e060-2d78-47cd-8bfb-e9c3bf282b29')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8bc6e060-2d78-47cd-8bfb-e9c3bf282b29 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_client_regs","summary":"{\n  \"name\": \"df_client_regs\",\n  \"rows\": 4096,\n  \"fields\": [\n    {\n      \"column\": \"client_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1182,\n        \"min\": 1,\n        \"max\": 4096,\n        \"num_unique_values\": 4096,\n        \"samples\": [\n          1315,\n          3770,\n          2644\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"visit_dttm\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2022-09-01 03:32:43.977277\",\n        \"max\": \"2023-02-02 02:22:04.176738\",\n        \"num_unique_values\": 4096,\n        \"samples\": [\n          \"2022-09-30 07:36:09.050020\",\n          \"2022-09-07 12:57:11.704822\",\n          \"2023-01-06 19:37:47.659181\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"account_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 295.7476401709178,\n        \"min\": 1.0,\n        \"max\": 1024.0,\n        \"num_unique_values\": 1024,\n        \"samples\": [\n          203.0,\n          126.0,\n          882.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["# Зарегистрировавшиеся клиенты, подавшие заявку на игру\n","query = \"SELECT account_rk, game_rk FROM msu_analytics.application\"\n","df_apps = sqlio.read_sql_query(query, conn)\n","df_apps.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":262},"id":"oSfCrthmDFhE","executionInfo":{"status":"ok","timestamp":1711713240034,"user_tz":-180,"elapsed":287,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"7df9e1b2-1807-4e3c-eb0a-8b0a39717bbc"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-41-6ee0cde5e52f>:3: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n","  df_apps = sqlio.read_sql_query(query, conn)\n"]},{"output_type":"execute_result","data":{"text/plain":["   account_rk  game_rk\n","0         788      349\n","1         852      237\n","2         620      447\n","3         770      302\n","4         818       19"],"text/html":["\n","  <div id=\"df-54bcb1ce-7080-47bb-a9f4-3201aa4d2822\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>account_rk</th>\n","      <th>game_rk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>788</td>\n","      <td>349</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>852</td>\n","      <td>237</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>620</td>\n","      <td>447</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>770</td>\n","      <td>302</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>818</td>\n","      <td>19</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54bcb1ce-7080-47bb-a9f4-3201aa4d2822')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-54bcb1ce-7080-47bb-a9f4-3201aa4d2822 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-54bcb1ce-7080-47bb-a9f4-3201aa4d2822');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-05b0904e-1684-413f-9997-3a394ed97cd1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-05b0904e-1684-413f-9997-3a394ed97cd1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-05b0904e-1684-413f-9997-3a394ed97cd1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_apps","summary":"{\n  \"name\": \"df_apps\",\n  \"rows\": 512,\n  \"fields\": [\n    {\n      \"column\": \"account_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114,\n        \"min\": 452,\n        \"max\": 863,\n        \"num_unique_values\": 293,\n        \"samples\": [\n          455,\n          708,\n          777\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"game_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 134,\n        \"min\": 1,\n        \"max\": 456,\n        \"num_unique_values\": 315,\n        \"samples\": [\n          259,\n          67,\n          219\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["df_client_regs_apps = pd.merge(\n","  df_client_regs, df_apps, how=\"left\", on=[\"account_rk\"]\n",")\n","\n","df_client_regs_apps.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"lbP1nV5SDd87","executionInfo":{"status":"ok","timestamp":1711713242562,"user_tz":-180,"elapsed":271,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"43517095-2a5a-49bf-c067-c363b4cf8711"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   client_rk                 visit_dttm  account_rk  game_rk\n","0        147 2022-11-15 10:26:20.581918      1017.0      NaN\n","1        227 2022-12-01 16:07:06.929838       712.0     25.0\n","2        227 2022-12-01 16:07:06.929838       712.0     44.0\n","3        227 2022-12-01 16:07:06.929838       712.0    350.0\n","4        243 2022-10-13 17:11:18.090119       296.0      NaN"],"text/html":["\n","  <div id=\"df-c293a22b-2d58-4529-b1f9-146b72efa654\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>client_rk</th>\n","      <th>visit_dttm</th>\n","      <th>account_rk</th>\n","      <th>game_rk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>147</td>\n","      <td>2022-11-15 10:26:20.581918</td>\n","      <td>1017.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>227</td>\n","      <td>2022-12-01 16:07:06.929838</td>\n","      <td>712.0</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>227</td>\n","      <td>2022-12-01 16:07:06.929838</td>\n","      <td>712.0</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>227</td>\n","      <td>2022-12-01 16:07:06.929838</td>\n","      <td>712.0</td>\n","      <td>350.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>243</td>\n","      <td>2022-10-13 17:11:18.090119</td>\n","      <td>296.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c293a22b-2d58-4529-b1f9-146b72efa654')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c293a22b-2d58-4529-b1f9-146b72efa654 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c293a22b-2d58-4529-b1f9-146b72efa654');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6b7c785a-d7a3-4818-a198-f17424180ac3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b7c785a-d7a3-4818-a198-f17424180ac3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6b7c785a-d7a3-4818-a198-f17424180ac3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_client_regs_apps","summary":"{\n  \"name\": \"df_client_regs_apps\",\n  \"rows\": 4315,\n  \"fields\": [\n    {\n      \"column\": \"client_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1183,\n        \"min\": 1,\n        \"max\": 4096,\n        \"num_unique_values\": 4096,\n        \"samples\": [\n          1315,\n          3770,\n          2644\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"visit_dttm\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2022-09-01 03:32:43.977277\",\n        \"max\": \"2023-02-02 02:22:04.176738\",\n        \"num_unique_values\": 4096,\n        \"samples\": [\n          \"2022-09-30 07:36:09.050020\",\n          \"2022-09-07 12:57:11.704822\",\n          \"2023-01-06 19:37:47.659181\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"account_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 277.48442101295484,\n        \"min\": 1.0,\n        \"max\": 1024.0,\n        \"num_unique_values\": 1024,\n        \"samples\": [\n          203.0,\n          126.0,\n          882.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"game_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 134.52560973019806,\n        \"min\": 1.0,\n        \"max\": 456.0,\n        \"num_unique_values\": 315,\n        \"samples\": [\n          302.0,\n          230.0,\n          79.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["# Подавшие заявку клиенты пришли на игру\n","query = \"SELECT game_rk, game_flg FROM msu_analytics.game\"\n","df_play = sqlio.read_sql_query(query, conn)\n","df_play.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":262},"id":"VvV0AinDFoOB","executionInfo":{"status":"ok","timestamp":1711713775308,"user_tz":-180,"elapsed":283,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"3ebc739f-98f3-4d72-a2e8-3b8affc13e9b"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-45-237f3ec0e74a>:3: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n","  df_play = sqlio.read_sql_query(query, conn)\n"]},{"output_type":"execute_result","data":{"text/plain":["   game_rk  game_flg\n","0       19         1\n","1       51         1\n","2       67         1\n","3       83         1\n","4       99         1"],"text/html":["\n","  <div id=\"df-54adfe32-0999-4238-99ba-872c94a7a26a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>game_rk</th>\n","      <th>game_flg</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>51</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>67</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>83</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>99</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54adfe32-0999-4238-99ba-872c94a7a26a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-54adfe32-0999-4238-99ba-872c94a7a26a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-54adfe32-0999-4238-99ba-872c94a7a26a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-37cc376e-2e01-47b4-a9ed-83dbad13beeb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-37cc376e-2e01-47b4-a9ed-83dbad13beeb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-37cc376e-2e01-47b4-a9ed-83dbad13beeb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_play","summary":"{\n  \"name\": \"df_play\",\n  \"rows\": 456,\n  \"fields\": [\n    {\n      \"column\": \"game_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 131,\n        \"min\": 1,\n        \"max\": 456,\n        \"num_unique_values\": 456,\n        \"samples\": [\n          84,\n          379,\n          337\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"game_flg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["df_client_regs_apps_play = pd.merge(\n","  df_client_regs_apps, df_play, how=\"left\", on=[\"game_rk\"]\n",")\n","\n","df_client_regs_apps_play.head(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":520},"id":"-xGdDXn7F7CZ","executionInfo":{"status":"ok","timestamp":1711713875973,"user_tz":-180,"elapsed":285,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"714fdc0d-2888-40f1-a0cb-98bcc7297ff4"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    client_rk                 visit_dttm  account_rk  game_rk  game_flg\n","0         147 2022-11-15 10:26:20.581918      1017.0      NaN       NaN\n","1         227 2022-12-01 16:07:06.929838       712.0     25.0       0.0\n","2         227 2022-12-01 16:07:06.929838       712.0     44.0       0.0\n","3         227 2022-12-01 16:07:06.929838       712.0    350.0       1.0\n","4         243 2022-10-13 17:11:18.090119       296.0      NaN       NaN\n","5         456 2022-12-17 09:10:03.151667       539.0      NaN       NaN\n","6         541 2022-11-01 16:09:34.351368       545.0    409.0       1.0\n","7         541 2022-11-01 16:09:34.351368       545.0    297.0       1.0\n","8         541 2022-11-01 16:09:34.351368       545.0    231.0       1.0\n","9         557 2022-10-14 10:31:15.354570       829.0    139.0       1.0\n","10        557 2022-10-14 10:31:15.354570       829.0     52.0       1.0\n","11        637 2023-01-03 23:11:06.523495       238.0      NaN       NaN\n","12        653 2022-11-02 23:38:33.616312       151.0      NaN       NaN\n","13        669 2023-01-30 06:35:30.149299       663.0    133.0       0.0\n","14        685 2023-01-26 10:26:50.130582       606.0    254.0       0.0"],"text/html":["\n","  <div id=\"df-0c20e920-cb8d-40d9-b370-ce10f726e91a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>client_rk</th>\n","      <th>visit_dttm</th>\n","      <th>account_rk</th>\n","      <th>game_rk</th>\n","      <th>game_flg</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>147</td>\n","      <td>2022-11-15 10:26:20.581918</td>\n","      <td>1017.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>227</td>\n","      <td>2022-12-01 16:07:06.929838</td>\n","      <td>712.0</td>\n","      <td>25.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>227</td>\n","      <td>2022-12-01 16:07:06.929838</td>\n","      <td>712.0</td>\n","      <td>44.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>227</td>\n","      <td>2022-12-01 16:07:06.929838</td>\n","      <td>712.0</td>\n","      <td>350.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>243</td>\n","      <td>2022-10-13 17:11:18.090119</td>\n","      <td>296.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>456</td>\n","      <td>2022-12-17 09:10:03.151667</td>\n","      <td>539.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>541</td>\n","      <td>2022-11-01 16:09:34.351368</td>\n","      <td>545.0</td>\n","      <td>409.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>541</td>\n","      <td>2022-11-01 16:09:34.351368</td>\n","      <td>545.0</td>\n","      <td>297.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>541</td>\n","      <td>2022-11-01 16:09:34.351368</td>\n","      <td>545.0</td>\n","      <td>231.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>557</td>\n","      <td>2022-10-14 10:31:15.354570</td>\n","      <td>829.0</td>\n","      <td>139.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>557</td>\n","      <td>2022-10-14 10:31:15.354570</td>\n","      <td>829.0</td>\n","      <td>52.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>637</td>\n","      <td>2023-01-03 23:11:06.523495</td>\n","      <td>238.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>653</td>\n","      <td>2022-11-02 23:38:33.616312</td>\n","      <td>151.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>669</td>\n","      <td>2023-01-30 06:35:30.149299</td>\n","      <td>663.0</td>\n","      <td>133.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>685</td>\n","      <td>2023-01-26 10:26:50.130582</td>\n","      <td>606.0</td>\n","      <td>254.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c20e920-cb8d-40d9-b370-ce10f726e91a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c20e920-cb8d-40d9-b370-ce10f726e91a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c20e920-cb8d-40d9-b370-ce10f726e91a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9ffafc84-5805-4b23-99b4-a236faf63fdf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ffafc84-5805-4b23-99b4-a236faf63fdf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9ffafc84-5805-4b23-99b4-a236faf63fdf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_client_regs_apps_play","summary":"{\n  \"name\": \"df_client_regs_apps_play\",\n  \"rows\": 4315,\n  \"fields\": [\n    {\n      \"column\": \"client_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1183,\n        \"min\": 1,\n        \"max\": 4096,\n        \"num_unique_values\": 4096,\n        \"samples\": [\n          1315,\n          3770,\n          2644\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"visit_dttm\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2022-09-01 03:32:43.977277\",\n        \"max\": \"2023-02-02 02:22:04.176738\",\n        \"num_unique_values\": 4096,\n        \"samples\": [\n          \"2022-09-30 07:36:09.050020\",\n          \"2022-09-07 12:57:11.704822\",\n          \"2023-01-06 19:37:47.659181\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"account_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 277.48442101295484,\n        \"min\": 1.0,\n        \"max\": 1024.0,\n        \"num_unique_values\": 1024,\n        \"samples\": [\n          203.0,\n          126.0,\n          882.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"game_rk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 134.52560973019806,\n        \"min\": 1.0,\n        \"max\": 456.0,\n        \"num_unique_values\": 315,\n        \"samples\": [\n          302.0,\n          230.0,\n          79.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"game_flg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5002445585864012,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["#Табличка по месяцам\n","df_monthly = df_client_regs_apps_play.copy()\n","df_monthly['month'] = df_monthly['visit_dttm'].dt.month\n","\n","df_client_group_month = df_monthly.groupby(\"month\").agg(total_users=('client_rk', 'count'), total_regs=('account_rk', 'count'), total_apps=('game_rk', 'count'),  total_plays=('game_flg', 'sum')).reset_index()\n"],"metadata":{"id":"iW2RHNOlYHbP","executionInfo":{"status":"ok","timestamp":1711713945205,"user_tz":-180,"elapsed":415,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","x = df_client_group_month['month']\n","y1 = df_client_group_month['total_users']\n","y2 = df_client_group_month['total_regs']\n","y3 = df_client_group_month['total_apps']\n","y4 = df_client_group_month['total_plays']\n","\n","fig, ax = plt.subplots()\n","\n","ax.bar(x, y1)\n","ax.bar(x, y2)\n","ax.bar(x, y3)\n","ax.bar(x, y4)\n","\n","ax.legend(['Посетили', 'Зарегестрировались', 'Подали заявку', 'Пришли на игру'], loc=(1.05, 0.5))\n","ax.set_xlabel('Месяц', fontsize=12)\n","ax.set_ylabel('Кол-во клиентов', fontsize=12)\n","ax.set_title('Число клиентов на сайте по месяцам', fontsize=12)\n","plt.rc('xtick', labelsize= 10)\n","plt.rc('ytick', labelsize= 10)\n","plt.rc('legend', fontsize=10)\n","\n","fig.set_figwidth(10)    #  ширина Figure\n","fig.set_figheight(6)    #  высота Figure\n","plt.xticks(rotation=90)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":572},"id":"aP8nA2rF7tYK","executionInfo":{"status":"ok","timestamp":1711713978263,"user_tz":-180,"elapsed":862,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"feee6a4c-d16b-4af8-c94d-25632df97508"},"execution_count":49,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","\n","temp_df = df_client_group_month[df_client_group_month['month'] == 2]\n","\n","x = temp_df['month']\n","y1 = temp_df['total_users']\n","y2 = temp_df['total_regs']\n","y3 = temp_df['total_apps']\n","y4 = temp_df['total_plays']\n","\n","fig, ax = plt.subplots()\n","\n","ax.bar(x, y1)\n","ax.bar(x, y2)\n","ax.bar(x, y3)\n","ax.bar(x, y4)\n","\n","ax.legend(['Посетили', 'Зарегестрировались', 'Подали заявку', 'Пришли на игру'], loc=(1.05, 0.5))\n","ax.set_xlabel('Месяц', fontsize=12)\n","ax.set_ylabel('Кол-во клиентов', fontsize=12)\n","ax.set_title('Число клиентов на сайте во втором месяце', fontsize=12)\n","plt.rc('xtick', labelsize= 10)\n","plt.rc('ytick', labelsize= 10)\n","plt.rc('legend', fontsize=10)\n","\n","fig.set_figwidth(10)    #  ширина Figure\n","fig.set_figheight(6)    #  высота Figure\n","plt.xticks(rotation=90)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":576},"id":"CPZzY37THK0D","executionInfo":{"status":"ok","timestamp":1711714171853,"user_tz":-180,"elapsed":774,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"80abc8f7-23f6-4961-c37e-4d891da41cb8"},"execution_count":50,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#Табличка по неделям\n","\n","df_weekly = df_client_regs_apps_play.copy()\n","df_weekly['week'] = df_weekly['visit_dttm'].dt.week\n","\n","df_client_group_week = df_weekly.groupby(\"week\").agg(total_users=('client_rk', 'count'), total_regs=('account_rk', 'count'), total_apps=('game_rk', 'count'),  total_plays=('game_flg', 'sum')).reset_index()\n"],"metadata":{"id":"FSto_B5xYvDi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1711714647035,"user_tz":-180,"elapsed":413,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"cf88e7dd-4f60-40d0-8713-25778aa9e3d2"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-51-e72047e2cedb>:4: FutureWarning: Series.dt.weekofyear and Series.dt.week have been deprecated. Please use Series.dt.isocalendar().week instead.\n","  df_weekly['week'] = df_weekly['visit_dttm'].dt.week\n"]}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","x = df_client_group_week['week']\n","y1 = df_client_group_week['total_users']\n","y2 = df_client_group_week['total_regs']\n","y3 = df_client_group_week['total_apps']\n","y4 = df_client_group_week['total_plays']\n","\n","fig, ax = plt.subplots()\n","\n","ax.bar(x, y1)\n","ax.bar(x, y2)\n","ax.bar(x, y3)\n","ax.bar(x, y4)\n","\n","ax.legend(['Посетили', 'Зарегестрировались', 'Подали заявку', 'Пришли на игру'], loc=(1.05, 0.5))\n","ax.set_xlabel('Неделя', fontsize=12)\n","ax.set_ylabel('Кол-во клиентов', fontsize=12)\n","ax.set_title('Число клиентов на сайте по недельно', fontsize=12)\n","plt.rc('xtick', labelsize= 10)\n","plt.rc('ytick', labelsize= 10)\n","plt.rc('legend', fontsize=10)\n","\n","fig.set_figwidth(10)    #  ширина Figure\n","fig.set_figheight(6)    #  высота Figure\n","plt.xticks(rotation=90)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":572},"id":"cWjg0QUOJPCe","executionInfo":{"status":"ok","timestamp":1711714695919,"user_tz":-180,"elapsed":633,"user":{"displayName":"Maksim Maiko","userId":"03850726252769454637"}},"outputId":"9a8781f9-4f88-4a1d-ca3a-b8fc17053693"},"execution_count":52,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#3а. Считаем конверсии, точнее доли, и делаем визуализацию на Python - помесячно\n","#Конверсия = количество посетителей, совершивших целевое действие / общее количество всех посетителей * 100%.\n"],"metadata":{"id":"OMR-itIvYvkW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#3б. Считаем конверсии, точнее доли, и делаем визуализацию на Python - понедельно\n","#Конверсия = количество посетителей, совершивших целевое действие / общее количество всех посетителей * 100%.\n"],"metadata":{"id":"Wc0hI741lLbu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#4а. Теперь то же самое, но на одном графике - помесячно"],"metadata":{"id":"uRZHmXLtkUSq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#4а. Теперь то же самое, но на одном графике - понедельно"],"metadata":{"id":"nCQiCje7VGjx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#ВЫВОДЫ:\n","\n","#ТОЧКИ РОСТА:\n"],"metadata":{"id":"GKyz_vatVL9H"},"execution_count":null,"outputs":[]}]}